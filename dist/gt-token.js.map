{"version":3,"file":"gt-token.js","mappings":"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","sources":["webpack://GTToken/webpack/universalModuleDefinition","webpack://GTToken/webpack/bootstrap","webpack://GTToken/webpack/runtime/compat get default export","webpack://GTToken/webpack/runtime/define property getters","webpack://GTToken/webpack/runtime/hasOwnProperty shorthand","webpack://GTToken/./src/types.ts","webpack://GTToken/./src/browser.ts","webpack://GTToken/./src/node.ts","webpack://GTToken/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GTToken\"] = factory();\n\telse\n\t\troot[\"GTToken\"] = factory();\n})(this, () => {\nreturn ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export class TokenError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'TokenError';\n    }\n}\nexport class InvalidSecretError extends Error {\n    constructor() {\n        super('Invalid secret key');\n        this.name = 'InvalidSecretError';\n    }\n}\n","import { TokenError, InvalidSecretError } from './types';\nexport class SecureToken {\n    constructor(secretKey) {\n        this.encoder = new TextEncoder();\n        this.decoder = new TextDecoder();\n        this.secretKey = null;\n        this.keyHash = null;\n        this.initializationPromise = this.initializeKey(secretKey);\n    }\n    async initializeKey(secretKey) {\n        const keyMaterial = await crypto.subtle.importKey('raw', this.encoder.encode(secretKey), { name: 'PBKDF2' }, false, ['deriveBits', 'deriveKey']);\n        this.secretKey = await crypto.subtle.deriveKey({\n            name: 'PBKDF2',\n            salt: this.encoder.encode('secure-token-salt'),\n            iterations: 100000,\n            hash: 'SHA-256'\n        }, keyMaterial, { name: 'AES-GCM', length: 256 }, true, ['encrypt', 'decrypt']);\n        const keyBuffer = await crypto.subtle.exportKey('raw', this.secretKey);\n        const hashBuffer = await crypto.subtle.digest('SHA-256', keyBuffer);\n        this.keyHash = Array.from(new Uint8Array(hashBuffer))\n            .map(b => b.toString(16).padStart(2, '0'))\n            .join('');\n    }\n    async ensureInitialized() {\n        await this.initializationPromise;\n        if (!this.secretKey || !this.keyHash) {\n            throw new Error('SecureToken not properly initialized');\n        }\n    }\n    async encrypt(data, options = {}) {\n        await this.ensureInitialized();\n        try {\n            const iv = crypto.getRandomValues(new Uint8Array(12));\n            const payload = {\n                data,\n                iat: Math.floor(Date.now() / 1000),\n                keyHash: this.keyHash,\n            };\n            if (options.expiresIn) {\n                payload.exp = payload.iat + Math.floor(options.expiresIn);\n            }\n            const encrypted = await crypto.subtle.encrypt({\n                name: 'AES-GCM',\n                iv: iv\n            }, this.secretKey, this.encoder.encode(JSON.stringify(payload)));\n            const combined = new Uint8Array(iv.length + new Uint8Array(encrypted).length);\n            combined.set(iv);\n            combined.set(new Uint8Array(encrypted), iv.length);\n            return btoa(String.fromCharCode(...combined));\n        }\n        catch (error) {\n            throw new TokenError(`Encryption failed: ${error.message}`);\n        }\n    }\n    async decrypt(token) {\n        await this.ensureInitialized();\n        try {\n            const combined = new Uint8Array(atob(token)\n                .split('')\n                .map(char => char.charCodeAt(0)));\n            const iv = combined.slice(0, 12);\n            const encrypted = combined.slice(12);\n            const decrypted = await crypto.subtle.decrypt({\n                name: 'AES-GCM',\n                iv: iv\n            }, this.secretKey, encrypted);\n            const payload = JSON.parse(this.decoder.decode(decrypted));\n            if (payload.keyHash !== this.keyHash) {\n                throw new InvalidSecretError();\n            }\n            const currentTime = Math.floor(Date.now() / 1000);\n            if (payload.exp && currentTime >= payload.exp) {\n                throw new TokenError('Token has expired');\n            }\n            return payload.data;\n        }\n        catch (error) {\n            if (error instanceof InvalidSecretError) {\n                throw error;\n            }\n            if (error instanceof TokenError) {\n                throw error;\n            }\n            throw new TokenError(`Decryption failed: ${error.message}`);\n        }\n    }\n    async verify(token) {\n        try {\n            await this.decrypt(token);\n            return true;\n        }\n        catch (error) {\n            if (error instanceof InvalidSecretError) {\n                return false;\n            }\n            if (error instanceof TokenError) {\n                return false;\n            }\n            return false;\n        }\n    }\n}\nexport default SecureToken;\n","import crypto from 'crypto';\nimport { TokenError, InvalidSecretError } from './types';\nexport class SecureToken {\n    constructor(secretKey) {\n        this.algorithm = 'aes-256-gcm';\n        this.encoding = 'hex';\n        this.secretKey = crypto\n            .createHash('sha256')\n            .update(String(secretKey))\n            .digest();\n        this.keyHash = crypto\n            .createHash('sha256')\n            .update(this.secretKey)\n            .digest('hex');\n    }\n    async encrypt(data, options = {}) {\n        try {\n            const iv = crypto.randomBytes(12);\n            const cipher = crypto.createCipheriv(this.algorithm, this.secretKey, iv);\n            const payload = {\n                data,\n                iat: Math.floor(Date.now() / 1000),\n                keyHash: this.keyHash,\n            };\n            if (options.expiresIn) {\n                payload.exp = payload.iat + Math.floor(options.expiresIn);\n            }\n            const payloadStr = JSON.stringify(payload);\n            const encrypted = Buffer.concat([\n                cipher.update(payloadStr, 'utf8'),\n                cipher.final(),\n            ]);\n            const authTag = cipher.getAuthTag();\n            const token = Buffer.concat([iv, encrypted, authTag]);\n            return token.toString(this.encoding);\n        }\n        catch (error) {\n            throw new TokenError(`Encryption failed: ${error.message}`);\n        }\n    }\n    async decrypt(token) {\n        try {\n            const tokenBuffer = Buffer.from(token, this.encoding);\n            const iv = tokenBuffer.subarray(0, 12);\n            const authTag = tokenBuffer.subarray(tokenBuffer.length - 16);\n            const encrypted = tokenBuffer.subarray(12, tokenBuffer.length - 16);\n            const decipher = crypto.createDecipheriv(this.algorithm, this.secretKey, iv);\n            decipher.setAuthTag(authTag);\n            const decrypted = Buffer.concat([\n                decipher.update(encrypted),\n                decipher.final(),\n            ]);\n            const payload = JSON.parse(decrypted.toString('utf8'));\n            if (payload.keyHash !== this.keyHash) {\n                throw new InvalidSecretError();\n            }\n            const currentTime = Math.floor(Date.now() / 1000);\n            if (payload.exp && currentTime >= payload.exp) {\n                throw new TokenError('Token has expired');\n            }\n            return payload.data;\n        }\n        catch (error) {\n            if (error instanceof InvalidSecretError) {\n                throw error;\n            }\n            if (error instanceof TokenError) {\n                throw error;\n            }\n            throw new TokenError(`Decryption failed: ${error.message}`);\n        }\n    }\n    async verify(token) {\n        try {\n            await this.decrypt(token);\n            return true;\n        }\n        catch (error) {\n            if (error instanceof InvalidSecretError) {\n                return false;\n            }\n            if (error instanceof TokenError) {\n                return false;\n            }\n            return false;\n        }\n    }\n}\nexport default SecureToken;\n","import { TokenError, InvalidSecretError } from './types';\nimport BrowserSecureToken from './browser';\nimport NodeSecureToken from './node';\nclass GTToken {\n    constructor(secretKey) {\n        if (typeof window !== 'undefined' && window.crypto && window.crypto.subtle) {\n            // Browser environment\n            this.implementation = new BrowserSecureToken(secretKey);\n        }\n        else if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n            // Node.js environment\n            this.implementation = new NodeSecureToken(secretKey);\n        }\n        else {\n            throw new Error('Unsupported environment');\n        }\n    }\n    async encrypt(data, options = {}) {\n        return this.implementation.encrypt(data, options);\n    }\n    async decrypt(token) {\n        return this.implementation.decrypt(token);\n    }\n    async verify(token) {\n        return this.implementation.verify(token);\n    }\n}\nGTToken.TokenError = TokenError;\nGTToken.InvalidSecretError = InvalidSecretError;\nexport default GTToken;\nexport { TokenError, InvalidSecretError };\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","TokenError","Error","constructor","message","super","name","InvalidSecretError","SecureToken","secretKey","encoder","TextEncoder","decoder","TextDecoder","keyHash","initializationPromise","initializeKey","keyMaterial","crypto","subtle","importKey","encode","deriveKey","salt","iterations","hash","length","keyBuffer","exportKey","hashBuffer","digest","Array","from","Uint8Array","map","b","toString","padStart","join","ensureInitialized","encrypt","data","options","iv","getRandomValues","payload","iat","Math","floor","Date","now","expiresIn","exp","encrypted","JSON","stringify","combined","set","btoa","String","fromCharCode","error","decrypt","token","atob","split","char","charCodeAt","slice","decrypted","parse","decode","currentTime","verify","algorithm","encoding","update","cipher","payloadStr","Buffer","concat","final","authTag","getAuthTag","tokenBuffer","subarray","decipher","setAuthTag","GTToken","window","implementation","process","versions","node"],"sourceRoot":""}